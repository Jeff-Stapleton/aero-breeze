"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNativeSvg = _interopRequireWildcard(require("react-native-svg"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/* GENERATED FILE */

const MapPinPlus = ({
  title,
  titleId,
  ...props
}) => /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNativeSvg.default, {
  className: "map-pin-plus-light__svg-icon-phosphor",
  testID: props.testID ?? 'phosphor-react-native-map-pin-plus-light',
  fill: "currentColor",
  viewBox: "0 0 256 256",
  width: props.size,
  height: props.size,
  "aria-labelledby": titleId,
  ...props,
  children: [title ? /*#__PURE__*/(0, _jsxRuntime.jsx)("title", {
    id: titleId,
    children: title
  }) : null, /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNativeSvg.Path, {
    d: "M166 104a6 6 0 0 1-6 6h-26v26a6 6 0 0 1-12 0v-26H96a6 6 0 0 1 0-12h26V72a6 6 0 0 1 12 0v26h26a6 6 0 0 1 6 6Zm48 0c0 30.91-14.34 63.74-41.47 94.94a252.32 252.32 0 0 1-41.09 38 6 6 0 0 1-6.88 0 252.32 252.32 0 0 1-41.09-38C56.34 167.74 42 134.91 42 104a86 86 0 0 1 172 0Zm-12 0a74 74 0 0 0-148 0c0 59.62 59 108.93 74 120.51 15-11.58 74-60.89 74-120.51Z"
  })]
});
var _default = exports.default = MapPinPlus;