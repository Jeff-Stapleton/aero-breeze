"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _lib = require("../lib");
var _MicrosoftPowerpointLogo = _interopRequireDefault(require("../bold/MicrosoftPowerpointLogo"));
var _MicrosoftPowerpointLogo2 = _interopRequireDefault(require("../duotone/MicrosoftPowerpointLogo"));
var _MicrosoftPowerpointLogo3 = _interopRequireDefault(require("../fill/MicrosoftPowerpointLogo"));
var _MicrosoftPowerpointLogo4 = _interopRequireDefault(require("../light/MicrosoftPowerpointLogo"));
var _MicrosoftPowerpointLogo5 = _interopRequireDefault(require("../regular/MicrosoftPowerpointLogo"));
var _MicrosoftPowerpointLogo6 = _interopRequireDefault(require("../thin/MicrosoftPowerpointLogo"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/* GENERATED FILE */

function MicrosoftPowerpointLogo({
  weight,
  color,
  size,
  style,
  mirrored,
  duotoneColor,
  duotoneOpacity,
  ...props
}) {
  const {
    color: contextColor = '#000',
    size: contextSize = 24,
    weight: contextWeight = 'regular',
    mirrored: contextMirrored = false,
    style: contextStyle,
    duotoneColor: contextDuotoneColor = '#000',
    duotoneOpacity: contextDuotoneOpacity = 0.2
  } = (0, _react.useContext)(_lib.IconContext);
  const IconComponent = (0, _react.useMemo)(() => {
    const iconWeight = weight ?? contextWeight;
    const weightMap = {
      bold: _MicrosoftPowerpointLogo.default,
      duotone: _MicrosoftPowerpointLogo2.default,
      fill: _MicrosoftPowerpointLogo3.default,
      light: _MicrosoftPowerpointLogo4.default,
      regular: _MicrosoftPowerpointLogo5.default,
      thin: _MicrosoftPowerpointLogo6.default
    };
    return weightMap[iconWeight];
  }, [weight, contextWeight]);
  const mirroredValue = mirrored ?? contextMirrored;
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(IconComponent, {
    color: color ?? contextColor,
    size: size ?? contextSize,
    style: [contextStyle, style, {
      ...(mirroredValue && {
        transform: [{
          scaleX: -1
        }]
      })
    }],
    duotoneColor: duotoneColor ?? contextDuotoneColor,
    duotoneOpacity: duotoneOpacity ?? contextDuotoneOpacity,
    ...props
  });
}
var _default = exports.default = MicrosoftPowerpointLogo;