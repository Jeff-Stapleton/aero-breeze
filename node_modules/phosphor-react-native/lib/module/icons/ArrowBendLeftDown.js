"use strict";

/* GENERATED FILE */
import React, { useContext, useMemo } from 'react';
import { IconContext } from '../lib';
import bold from '../bold/ArrowBendLeftDown';
import duotone from '../duotone/ArrowBendLeftDown';
import fill from '../fill/ArrowBendLeftDown';
import light from '../light/ArrowBendLeftDown';
import regular from '../regular/ArrowBendLeftDown';
import thin from '../thin/ArrowBendLeftDown';
import { jsx as _jsx } from "react/jsx-runtime";
function ArrowBendLeftDown({
  weight,
  color,
  size,
  style,
  mirrored,
  duotoneColor,
  duotoneOpacity,
  ...props
}) {
  const {
    color: contextColor = '#000',
    size: contextSize = 24,
    weight: contextWeight = 'regular',
    mirrored: contextMirrored = false,
    style: contextStyle,
    duotoneColor: contextDuotoneColor = '#000',
    duotoneOpacity: contextDuotoneOpacity = 0.2
  } = useContext(IconContext);
  const IconComponent = useMemo(() => {
    const iconWeight = weight ?? contextWeight;
    const weightMap = {
      bold,
      duotone,
      fill,
      light,
      regular,
      thin
    };
    return weightMap[iconWeight];
  }, [weight, contextWeight]);
  const mirroredValue = mirrored ?? contextMirrored;
  return /*#__PURE__*/_jsx(IconComponent, {
    color: color ?? contextColor,
    size: size ?? contextSize,
    style: [contextStyle, style, {
      ...(mirroredValue && {
        transform: [{
          scaleX: -1
        }]
      })
    }],
    duotoneColor: duotoneColor ?? contextDuotoneColor,
    duotoneOpacity: duotoneOpacity ?? contextDuotoneOpacity,
    ...props
  });
}
export default ArrowBendLeftDown;
//# sourceMappingURL=ArrowBendLeftDown.js.map